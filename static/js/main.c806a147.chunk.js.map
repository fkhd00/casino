{"version":3,"sources":["components/Contents.js","components/UserInfo.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["Transition","React","props","ref","Slide","direction","Contents","start","message","addbalance","slot1","tabledata","rows","i","length","open1","setOpen1","handleClose1","id","style","height","width","columns","field","headerName","editable","pageSize","Button","variant","color","onClick","Dialog","open","TransitionComponent","keepMounted","onClose","DialogTitle","DialogContent","DialogContentText","className","DialogActions","UserInfo","useState","setOpen","handleClose","fontSize","maxWidth","TextField","autoFocus","margin","label","type","fullWidth","Header","balance","Typography","component","gutterBottom","Footer","dataArray","count","App","setBalance","setMessage","slotSym1","setSlotSym1","setTabledata","useEffect","randomf","Math","floor","random","result","array","split","slots","console","log","res","join","push","time","Date","toLocaleTimeString","toString","object","dataTable","display","reward","scorec","match","j","score","round","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c806a147.chunk.js","sourcesContent":["import * as React from 'react';\nimport { DataGrid } from '@material-ui/data-grid';\nimport { Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n  });\nfunction Contents({start,message,addbalance,slot1,tabledata}){\n\n    const columns = [\n        { field: 'id', headerName: 'ID', width: 100,height:50 },\n        {\n          field: 'result',\n          headerName: 'Result',\n          width: 150,\n          height:50,\n          editable: false,\n        },\n        \n        {\n          field: 'time',\n          headerName: 'Time',\n          width: 150,\n          height:50,\n          editable: false,\n        },\n      ];\n      \n    const rows =[];\n    for(let i=0;i<tabledata.length;i++){\n        rows[i]=tabledata[i];\n    }\n\n\n\n    const [open1, setOpen1] = React.useState(false);\n    const handleClickOpen1 = () => {\n        setOpen1(true);\n      };\n    \n    const handleClose1 = () => {\n        setOpen1(false);\n      };\n\n    return(\n        <div id=\"content\">\n            <div id=\"tableContainer\">\n                <div style={{ height:500, width:\"410px\" }}>\n                    <DataGrid\n                        rows={rows}\n                        columns={columns}\n                        pageSize={10}\n                    />\n                </div>\n            </div>\n\n\n            <div id=\"gameContainer\">\n                <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen1}>Game Start</Button>\n                    <Dialog\n                        open={open1}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        onClose={handleClose1}\n                        aria-labelledby=\"alert-dialog-slide-title\"\n                        aria-describedby=\"alert-dialog-slide-description\"\n                    >\n                        <DialogTitle id=\"alert-dialog-slide-title\">{\"Use Google's location service?\"}</DialogTitle>\n                        <DialogContent>\n                        <DialogContentText id=\"alert-dialog-slide-description\">\n                            Click Spin to start the Game !! \n                            Beware !!! Each spin will cost you $2.\n                        </DialogContentText>\n                        <DialogContentText id=\"fundmessage\">\n                            {message}\n                        </DialogContentText>\n                        <div id=\"gamebox\">\n                            <div className=\"slot\" id=\"slot1\">{slot1[0]}</div>\n                            <div className=\"slot\" id=\"slot2\">{slot1[1]}</div>\n                            <div className=\"slot\" id=\"slot3\">{slot1[2]}</div>\n                        </div>\n                        <div id=\"spinButton\" onClick={start}>\n                            <Button variant=\"contained\" color=\"primary\">Spin</Button>\n                        </div>\n                        </DialogContent>\n                        <DialogActions>\n                        <Button  color=\"default\" variant=\"outlined\" onClick={addbalance}>\n                            Debug\n                        </Button>\n                        <Button onClick={handleClose1} color=\"secondary\" variant=\"outlined\">\n                            Close\n                        </Button>\n                        </DialogActions>\n                    </Dialog>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Contents;","import React from \"react\";\nimport Button from '@material-ui/core/Button';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nfunction UserInfo(){\n\n    const [open, setOpen] = React.useState(false);\n  \n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n\n    return(\n        <ul id=\"userInfo\">\n            <li>\n                <AccountCircleIcon color=\"primary\" fontSize=\"large\" id=\"accIcon\"></AccountCircleIcon>\n            </li>\n            <li>\n                <Button onClick={handleClickOpen} variant=\"contained\" color=\"primary\" id=\"sign-in-button\">Sign In</Button> \n                <Dialog\n                    maxWidth=\"xs\"\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                            >\n                    <DialogTitle id=\"form-dialog-title\">Sign In</DialogTitle>\n                    <DialogContent>\n                    <DialogContentText>\n                        To play the game, please sign in or you can also play as a guest.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"username\"\n                        label=\"Username\"\n                        type=\"text\"\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        fullWidth\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"pass\"\n                        label=\"Password\"\n                        type=\"password\"\n                        fullWidth\n                    />\n                    </DialogContent>\n                    <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Guest\n                    </Button>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Sign In\n                    </Button>\n                    </DialogActions>\n                </Dialog>            \n            </li>\n        </ul>\n    );\n}\nexport default UserInfo;","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nimport UserInfo from \"./UserInfo\";\n\nfunction Header({balance}){\nreturn(\n    <div id=\"head\">\n        <div id=\"name\">\n            <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Aniket Gedam\n            </Typography>    \n        </div>\n\n        <div id=\"infoContainer\">\n            <Typography variant=\"subtitle2\" id=\"balance\">Balance: $ {balance}</Typography>\n            <UserInfo />\n        </div>    \n    </div>\n);\n\n}\n\nexport default Header;","import React from \"react\";\nimport Typography from '@material-ui/core/Typography';\nfunction Footer(){\nreturn(\n    <div id=\"footer\">\n        <div>\n            <Typography variant=\"body1\"><span id=\"copy\">©</span>Copyright: Aniket Gedam</Typography>\n        </div>\n        \n    </div>\n);\n}\nexport default Footer;","import React,{useEffect, useState} from \"react\";\nimport Contents from \"./components/Contents\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nlet dataArray=[];\nlet count=0;\nfunction App() {\nconst [balance,setBalance]=useState(9.99);\nconst [message,setMessage]=useState(\"\");\nconst [slotSym1,setSlotSym1]=useState([]);\nconst [tabledata,setTabledata]=useState([]);\n\n\nconst onStart=()=>{\n  if(balance<2){\n    setMessage(\"Insufficient funds !!! Press debug to add.\");\n  }\n  else{\n    const slot1=randomf()+\"\";\n    const slot2=randomf()+\"\";\n    const slot3=randomf()+\"\";\n    const result=slot1+slot2+slot3;\n    display(result);\n    function score(result){\n        const count=[];\n        const scorec=[];\n        count[0]=result.match(/0/g);\n        count[1]=result.match(/1/g);\n        count[2]=result.match(/2/g);\n        count[3]=result.match(/3/g);\n        console.log(count)\n        for(let j=0;j<4;j++){\n            if(count[j]!==null){\n                scorec.push(count[j]);\n            }\n        }\n        return(scorec.length);\n    }\n\n    const reward=score(result);\n    if(reward===1 && result===\"000\"){\n      setBalance(Math.round((balance+5.00-2.00)*100)/100);   \n    }\n    else if(reward===1&&result!==\"000\"){\n      setBalance(Math.round((balance+2.00-2.00)*100)/100);\n    }\n    else if(reward===2){\n      setBalance(Math.round((balance+0.50-2.00)*100)/100);\n    }\n    else{\n      setBalance(Math.round((balance-2.00)*100)/100);\n    }\n  }  \n}\n\nfunction dataTable(res){\n  let time= new Date().toLocaleTimeString().toString();\n  let object={id:count,\"result\":res,\"time\":time}\n  count=count+1;\n  return object;\n}\n\nconst addfunds=()=>{\n  setMessage(\"\");\n  setBalance(Math.round((balance+5.00)*100)/100);\n}\n\nfunction display(result){\n  const array=result.split(\"\");\n  const slots=[]\n  console.log(array);\n  for(let i=0;i<3;i++){\n      if(array[i]===\"0\"){\n          slots[i]='♠';\n      }\n      else if(array[i]===\"1\"){\n        slots[i]=\"♥\";\n      }\n      else if(array[i]===\"2\"){\n        slots[i]=\"♣\";\n      }\n      else if(array[i]===\"3\"){\n        slots[i]=\"♦\";\n      }\n  }\n  setSlotSym1(slots);\n  let res=slots.join(\"\");\n  dataArray.push(dataTable(res))\n  console.log(tabledata);\n  \n  \n}\n\nuseEffect(()=>{\n  setTabledata(dataArray);\n},[balance,message,slotSym1,tabledata]);\n\nconst randomf=()=>{\n  return(Math.floor(Math.random()*4));\n}\n\n  return(\n    <div id=\"app\">\n      <Header balance={balance}/> \n      <Contents start={onStart} message={message} addbalance={addfunds} slot1={slotSym1} tabledata={tabledata}/>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}